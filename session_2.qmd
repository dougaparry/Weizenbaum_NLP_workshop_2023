---
title: "Session 2: Practical Exercises solutions"
author: "DA Parry"
format: html
---

## Load the packages for the analysis
```{r}
library(tidyverse)
library(tidytext)
```

## Load the dataset and take a look
```{r}
#install.packages("schrute")
library(schrute)

theoffice_df <- theoffice
glimpse(theoffice_df)
```

```{r}
head(theoffice_df, 10)
```

## Preprocessing the dataset

Create a tidy version of the dataset with words as your tokens and remove any stopwords that are unlikely to be informative for the analysis.

```{r}

```

## Analyse the dataset

### What are some of the most common words used in the office?

Determine the 20 most commons words in the dataset and visualise this as a bar chart.
```{r}

```

Determine the most common words used by each character in the show. For this analysis I've provided a list of the main characters that we're interested in. Filter the dataset to only focus on these characters. There's no need to plot the results.
```{r}
main_chars <- c("Michael", "Dwight", "Jim", 
           "Pam", "Andy", "Ryan")
  
```

## Which words may tell us about the contents of the show?

Calculate the tf-idf of the words in the text, using the episode name as your grouping variable. After you've calculated the tf-idf arrange it descending by tf-idf to find the most 'unusual' words. 

```{r}

```

## Sentiment analysis of the office

Let's analyse the sentiment for each character's dialogue using the AFINN lexicon provided by `tidytext`. For this analysis again you can focus on the main characters in the show.

After you calculate the sentiment values, produce a plot showing the density of the sentiment for each character.

```{r}
  
```

## Bonus: sentence level analysis

Use the `sentimentr` package to calculate the sentiment for each episode using sentence level sentiment accounting for valence shifters. Remember to scale the sentiment score to -1 to 1 after it has been calculated. Produce a plot for the resulting sentiment density. For this anlaysis, start with the `theoffice_df` dataframe.

```{r}
library(sentimentr)
```

```{r}
  
```


